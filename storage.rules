rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/staff/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    // Helper function to check if user is agent
    function isAgent() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/staff/$(request.auth.uid)).data.role == 'Agent';
    }
    
    // Helper function to check if user is cashier
    function isCashier() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/staff/$(request.auth.uid)).data.role == 'Cashier';
    }
    
    // Helper function to check if user is staff member
    function isStaff() {
      return isAuthenticated() && 
        firestore.exists(/databases/(default)/documents/staff/$(request.auth.uid));
    }
    
    // Avatar images - users can only access their own avatars, staff can access all
    match /avatars/{userId}/{allPaths=**} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isStaff());
      allow write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }
    
    // Game images - agents and admins can access
    match /games/{gameId}/{allPaths=**} {
      allow read: if isAgent() || isAdmin();
      allow write: if isAgent() || isAdmin();
    }
    
    // Staff profile images - staff can access their own, admins can access all
    match /staff/{staffId}/{allPaths=**} {
      allow read: if isAuthenticated() && (request.auth.uid == staffId || isAdmin());
      allow write: if isAuthenticated() && (request.auth.uid == staffId || isAdmin());
    }
    
    // System images - only admins can access
    match /system/{allPaths=**} {
      allow read, write: if isAdmin();
    }
    
    // Temporary uploads - authenticated users can upload, but files are automatically deleted
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
